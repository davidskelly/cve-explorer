package com.example.cveexplorer.config;

import com.example.cveexplorer.entity.Cve;
import com.example.cveexplorer.CveRepository;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.beans.factory.annotation.Value;
import org.springframework.boot.CommandLineRunner;
import org.springframework.context.annotation.Bean;
import org.springframework.context.annotation.Configuration;

import java.text.ParseException;
import java.text.SimpleDateFormat;

@Configuration
class InitDatabase {

	private static final Logger LOG = LoggerFactory.getLogger(InitDatabase.class);

	// setting to create test cves on startup
	@Value("${database.create_test_cves}")
	private boolean createTestCves;

	SimpleDateFormat dateFormat = new SimpleDateFormat("yyyy-MM-dd");
	CveRepository repository;

	@Bean
	CommandLineRunner init(CveRepository repository) {
		this.repository = repository;

		return args -> {

			if (!createTestCves) {
				LOG.info("Not creating sample cves [database.create_test_cves in application.properties]");
				return;
			}

			LOG.info("Creating sample cves [database.create_test_cves in application.properties]");
			createTestCVE("CVE-105", "Insecure design on website example.com", "1999-01-01");
			createTestCVE("CVE-100", "Wordpress login error.", "2000-01-01");
			createTestCVE("CVE-101", "Apache privilege escalation.", "2001-01-01");
			createTestCVE("CVE-102", "Nginx unauthorized access.", "2002-01-01");
			createTestCVE("CVE-103", "Cross site scripting attack at Facebook.", "2003-01-01");
			createTestCVE("CVE-104", "Unsecured endpoint at large bank.", "2004-01-01");
		};
	}

	/**
	 * Utility function to create a sample CVE.
	 *
	 * @param cveId         -
	 * @param description   -
	 * @param publishedDate -
	 * @throws ParseException - if the date does not match the expected format
	 */
	void createTestCVE(String cveId, String description, String publishedDate)
			throws ParseException {

		repository.save(new Cve()
				.setCveId(cveId)
				.setDescription(description)
				.setSource(Cve.SOURCE_TYPE_TEST)
				.setPublished(dateFormat.parse(publishedDate))
				.setModified(dateFormat.parse(publishedDate)));
	}
}