package com.example.cveexplorer;

import com.example.cveexplorer.entity.Cve;
import com.example.cveexplorer.feed.NVDFeed;
import org.json.JSONObject;
import org.junit.jupiter.api.Test;
import org.springframework.boot.test.context.SpringBootTest;

import static org.assertj.core.api.AssertionsForClassTypes.assertThat;

@SpringBootTest
public class NVDFeedTest {

	@Test
	void testCVEExtractionSuccess() throws Exception {
		// GIVEN: sample cve data
		String data = "{\n" +
				"\t\"cve\": {\n" +
				"\t\t\"data_type\": \"CVE\",\n" +
				"\t\t\"data_format\": \"MITRE\",\n" +
				"\t\t\"data_version\": \"4.0\",\n" +
				"\t\t\"CVE_data_meta\": {\n" +
				"\t\t\t\"ID\": \"CVE-2021-30331\",\n" +
				"\t\t\t\"ASSIGNER\": \"xxx\"\n" +
				"\t\t},\n" +
				"\t\t\"problemtype\": {\n" +
				"\t\t\t\"problemtype_data\": [\n" +
				"\t\t\t\t{\n" +
				"\t\t\t\t\t\"description\": [\n" +
				"\t\t\t\t\t\t{\n" +
				"\t\t\t\t\t\t\t\"lang\": \"en\",\n" +
				"\t\t\t\t\t\t\t\"value\": \"CWE-120\"\n" +
				"\t\t\t\t\t\t}\n" +
				"\t\t\t\t\t]\n" +
				"\t\t\t\t}\n" +
				"\t\t\t]\n" +
				"\t\t},\n" +
				"\t\t\"references\": {\n" +
				"\t\t\t\"reference_data\": [\n" +
				"\t\t\t\t{\n" +
				"\t\t\t\t\t\"url\": \"https://www.qualcomm.com/company/product-security/bulletins/march-2022-bulletin\",\n" +
				"\t\t\t\t\t\"name\": \"https://www.qualcomm.com/company/product-security/bulletins/march-2022-bulletin\",\n" +
				"\t\t\t\t\t\"refsource\": \"CONFIRM\",\n" +
				"\t\t\t\t\t\"tags\": [\n" +
				"\t\t\t\t\t\t\"Vendor Advisory\"\n" +
				"\t\t\t\t\t]\n" +
				"\t\t\t\t}\n" +
				"\t\t\t]\n" +
				"\t\t},\n" +
				"\t\t\"description\": {\n" +
				"\t\t\t\"description_data\": [\n" +
				"\t\t\t\t{\n" +
				"\t\t\t\t\t\"lang\": \"en\",\n" +
				"\t\t\t\t\t\"value\": \"Possible buffer overflow due to improper data validation of external commands sent via DIAG interface in Snapdragon Auto, Snapdragon Compute, Snapdragon Connectivity, Snapdragon Consumer IOT, Snapdragon Industrial IOT, Snapdragon Mobile, Snapdragon Wearables\"\n" +
				"\t\t\t\t}\n" +
				"\t\t\t]\n" +
				"\t\t}\n" +
				"\t},\n" +
				"\t\"configurations\": {\n" +
				"\t\t\"CVE_data_version\": \"4.0\",\n" +
				"\t\t\"nodes\": []\n" +
				"\t},\n" +
				"\t\"impact\": {\n" +
				"\t\t\"baseMetricV3\": {\n" +
				"\t\t\t\"cvssV3\": {\n" +
				"\t\t\t\t\"version\": \"3.1\",\n" +
				"\t\t\t\t\"vectorString\": \"CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:H/I:N/A:N\",\n" +
				"\t\t\t\t\"attackVector\": \"LOCAL\",\n" +
				"\t\t\t\t\"attackComplexity\": \"LOW\",\n" +
				"\t\t\t\t\"privilegesRequired\": \"LOW\",\n" +
				"\t\t\t\t\"userInteraction\": \"NONE\",\n" +
				"\t\t\t\t\"scope\": \"UNCHANGED\",\n" +
				"\t\t\t\t\"confidentialityImpact\": \"HIGH\",\n" +
				"\t\t\t\t\"integrityImpact\": \"NONE\",\n" +
				"\t\t\t\t\"availabilityImpact\": \"NONE\",\n" +
				"\t\t\t\t\"baseScore\": 5.5,\n" +
				"\t\t\t\t\"baseSeverity\": \"MEDIUM\"\n" +
				"\t\t\t},\n" +
				"\t\t\t\"exploitabilityScore\": 1.8,\n" +
				"\t\t\t\"impactScore\": 3.6\n" +
				"\t\t},\n" +
				"\t\t\"baseMetricV2\": {\n" +
				"\t\t\t\"cvssV2\": {\n" +
				"\t\t\t\t\"version\": \"2.0\",\n" +
				"\t\t\t\t\"vectorString\": \"AV:L/AC:L/Au:N/C:P/I:N/A:N\",\n" +
				"\t\t\t\t\"accessVector\": \"LOCAL\",\n" +
				"\t\t\t\t\"accessComplexity\": \"LOW\",\n" +
				"\t\t\t\t\"authentication\": \"NONE\",\n" +
				"\t\t\t\t\"confidentialityImpact\": \"PARTIAL\",\n" +
				"\t\t\t\t\"integrityImpact\": \"NONE\",\n" +
				"\t\t\t\t\"availabilityImpact\": \"NONE\",\n" +
				"\t\t\t\t\"baseScore\": 2.1\n" +
				"\t\t\t},\n" +
				"\t\t\t\"severity\": \"LOW\",\n" +
				"\t\t\t\"exploitabilityScore\": 3.9,\n" +
				"\t\t\t\"impactScore\": 2.9,\n" +
				"\t\t\t\"acInsufInfo\": false,\n" +
				"\t\t\t\"obtainAllPrivilege\": false,\n" +
				"\t\t\t\"obtainUserPrivilege\": false,\n" +
				"\t\t\t\"obtainOtherPrivilege\": false,\n" +
				"\t\t\t\"userInteractionRequired\": false\n" +
				"\t\t}\n" +
				"\t},\n" +
				"\t\"publishedDate\": \"2022-04-01T05:15Z\",\n" +
				"\t\"lastModifiedDate\": \"2022-04-07T20:45Z\"\n" +
				"}";
		JSONObject jdata = new JSONObject(data);

		// WHEN: the data is parsed
		Cve cve = new NVDFeed().extractCve(jdata);

		// THEN: the correct CVE is generated
		assertThat(cve.getCveId()).isEqualTo("CVE-2021-30331");
		assertThat(cve.getSeverity()).isEqualTo("LOW");
		assertThat(cve.getDescription()).startsWith("Possible buffer overflow due to improper");
	}

	@Test
	void testCVEExtractionNoSeverity() throws Exception {
		// GIVEN: sample cve data without an impact
		String data = "{\n" +
				"\t\t\t\t\"cve\": {\n" +
				"\t\t\t\t\t\"data_type\": \"CVE\",\n" +
				"\t\t\t\t\t\"data_format\": \"MITRE\",\n" +
				"\t\t\t\t\t\"data_version\": \"4.0\",\n" +
				"\t\t\t\t\t\"CVE_data_meta\": {\n" +
				"\t\t\t\t\t\t\"ID\": \"CVE-2022-24681\",\n" +
				"\t\t\t\t\t\t\"ASSIGNER\": \"xxx\"\n" +
				"\t\t\t\t\t},\n" +
				"\t\t\t\t\t\"problemtype\": {\n" +
				"\t\t\t\t\t\t\"problemtype_data\": [\n" +
				"\t\t\t\t\t\t\t{\n" +
				"\t\t\t\t\t\t\t\t\"description\": []\n" +
				"\t\t\t\t\t\t\t}\n" +
				"\t\t\t\t\t\t]\n" +
				"\t\t\t\t\t},\n" +
				"\t\t\t\t\t\"references\": {\n" +
				"\t\t\t\t\t\t\"reference_data\": [\n" +
				"\t\t\t\t\t\t\t{\n" +
				"\t\t\t\t\t\t\t\t\"url\": \"https://manageengine.com\",\n" +
				"\t\t\t\t\t\t\t\t\"name\": \"https://manageengine.com\",\n" +
				"\t\t\t\t\t\t\t\t\"refsource\": \"MISC\",\n" +
				"\t\t\t\t\t\t\t\t\"tags\": []\n" +
				"\t\t\t\t\t\t\t},\n" +
				"\t\t\t\t\t\t\t{\n" +
				"\t\t\t\t\t\t\t\t\"url\": \"https://www.manageengine.com/products/self-service-password/kb/CVE-2022-24681.html\",\n" +
				"\t\t\t\t\t\t\t\t\"name\": \"https://www.manageengine.com/products/self-service-password/kb/CVE-2022-24681.html\",\n" +
				"\t\t\t\t\t\t\t\t\"refsource\": \"CONFIRM\",\n" +
				"\t\t\t\t\t\t\t\t\"tags\": []\n" +
				"\t\t\t\t\t\t\t}\n" +
				"\t\t\t\t\t\t]\n" +
				"\t\t\t\t\t},\n" +
				"\t\t\t\t\t\"description\": {\n" +
				"\t\t\t\t\t\t\"description_data\": [\n" +
				"\t\t\t\t\t\t\t{\n" +
				"\t\t\t\t\t\t\t\t\"lang\": \"en\",\n" +
				"\t\t\t\t\t\t\t\t\"value\": \"Zoho ManageEngine ADSelfService Plus before 6121 allows XSS via the welcome name attribute to the Reset Password, Unlock Account, or User Must Change Password screen.\"\n" +
				"\t\t\t\t\t\t\t}\n" +
				"\t\t\t\t\t\t]\n" +
				"\t\t\t\t\t}\n" +
				"\t\t\t\t},\n" +
				"\t\t\t\t\"configurations\": {\n" +
				"\t\t\t\t\t\"CVE_data_version\": \"4.0\",\n" +
				"\t\t\t\t\t\"nodes\": []\n" +
				"\t\t\t\t},\n" +
				"\t\t\t\t\"impact\": {},\n" +
				"\t\t\t\t\"publishedDate\": \"2022-04-07T22:15Z\",\n" +
				"\t\t\t\t\"lastModifiedDate\": \"2022-04-07T22:15Z\"\n" +
				"\t\t\t},";
		JSONObject jdata = new JSONObject(data);

		// WHEN: the data is parsed
		Cve cve = new NVDFeed().extractCve(jdata);

		// THEN: the correct CVE is generated
		assertThat(cve.getCveId()).isEqualTo("CVE-2022-24681");
		assertThat(cve.getSeverity()).isEqualTo("");
		assertThat(cve.getDescription()).startsWith("Zoho ManageEngine ADSelfService Plus");
	}
}
